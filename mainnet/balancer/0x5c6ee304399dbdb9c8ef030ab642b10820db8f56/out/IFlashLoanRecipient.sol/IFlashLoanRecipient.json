{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feeAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "receiveFlashLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "receiveFlashLoan(address[],uint256[],uint256[],bytes)": "f04f2707"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/interfaces/IFlashLoanRecipient.sol\":\"IFlashLoanRecipient\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]},\"contracts/vault/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x6886740dcaebfb24a25f914ce5b4299aeab3fe0cc135a1707c0fe4e3d6d02cb6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6a379297af3e38f7ba24c9c26285382bf5d7e36260590f9d06ce1b573cadd7d4\",\"dweb:/ipfs/QmZWeYKn3UDBPJUrFCHty9g9fHWG46Q4BhhddmyfB1Ugj8\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.7.6+commit.7338295f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "feeAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "receiveFlashLoan"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "receiveFlashLoan(address[],uint256[],uint256[],bytes)": {
            "details": "When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/vault/interfaces/IFlashLoanRecipient.sol": "IFlashLoanRecipient"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/lib/openzeppelin/IERC20.sol": {
        "keccak256": "0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76",
        "urls": [
          "bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a",
          "dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4"
        ],
        "license": "MIT"
      },
      "contracts/vault/interfaces/IFlashLoanRecipient.sol": {
        "keccak256": "0x6886740dcaebfb24a25f914ce5b4299aeab3fe0cc135a1707c0fe4e3d6d02cb6",
        "urls": [
          "bzz-raw://6a379297af3e38f7ba24c9c26285382bf5d7e36260590f9d06ce1b573cadd7d4",
          "dweb:/ipfs/QmZWeYKn3UDBPJUrFCHty9g9fHWG46Q4BhhddmyfB1Ugj8"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/vault/interfaces/IFlashLoanRecipient.sol",
    "id": 13337,
    "exportedSymbols": {
      "IERC20": [
        3847
      ],
      "IFlashLoanRecipient": [
        13336
      ]
    },
    "nodeType": "SourceUnit",
    "src": "688:837:37",
    "nodes": [
      {
        "id": 13319,
        "nodeType": "PragmaDirective",
        "src": "688:23:37",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ]
      },
      {
        "id": 13320,
        "nodeType": "ImportDirective",
        "src": "765:43:37",
        "nodes": [],
        "absolutePath": "contracts/lib/openzeppelin/IERC20.sol",
        "file": "../../lib/openzeppelin/IERC20.sol",
        "scope": 13337,
        "sourceUnit": 3848,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13336,
        "nodeType": "ContractDefinition",
        "src": "810:714:37",
        "nodes": [
          {
            "id": 13335,
            "nodeType": "FunctionDefinition",
            "src": "1347:175:37",
            "nodes": [],
            "documentation": {
              "id": 13321,
              "nodeType": "StructuredDocumentation",
              "src": "846:496:37",
              "text": " @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n Vault, or else the entire flash loan will revert.\n `userData` is the same value passed in the `IVault.flashLoan` call."
            },
            "functionSelector": "f04f2707",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "receiveFlashLoan",
            "parameters": {
              "id": 13333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13324,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 13335,
                  "src": "1382:22:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$3847_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13322,
                      "name": "IERC20",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 3847,
                      "src": "1382:6:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3847",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 13323,
                    "nodeType": "ArrayTypeName",
                    "src": "1382:8:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$3847_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13327,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 13335,
                  "src": "1414:24:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13325,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1414:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13326,
                    "nodeType": "ArrayTypeName",
                    "src": "1414:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13330,
                  "mutability": "mutable",
                  "name": "feeAmounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 13335,
                  "src": "1448:27:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 13328,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1448:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 13329,
                    "nodeType": "ArrayTypeName",
                    "src": "1448:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13332,
                  "mutability": "mutable",
                  "name": "userData",
                  "nodeType": "VariableDeclaration",
                  "scope": 13335,
                  "src": "1485:21:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13331,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1485:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1372:140:37"
            },
            "returnParameters": {
              "id": 13334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1521:0:37"
            },
            "scope": 13336,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          13336
        ],
        "name": "IFlashLoanRecipient",
        "scope": 13337
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 37
}